// <auto-generated />
using System;
using GhabzeTo.Infra.Data.EF.Uow;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GhabzeTo.Infra.Data.EF.Migrations
{
    [DbContext(typeof(EfUnitOfWork))]
    [Migration("20190710101716_Add-GhabzeBargh")]
    partial class AddGhabzeBargh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GhabzeTo.Domain.Models.GhabzeAb.GhabzeAb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AboonmaneAb");

                    b.Property<int>("AboonmaneFazelab");

                    b.Property<string>("Address");

                    b.Property<int>("BahayeAbeMasrafi");

                    b.Property<int>("BahayeKhadamateDafeFazelab");

                    b.Property<int>("BedehiTalab");

                    b.Property<string>("CodePosti");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("Gharardad");

                    b.Property<double>("GhotreEnsheab");

                    b.Property<double>("GhotreEnsheabeFazelab");

                    b.Property<int>("HazineGharatVaTafkikeGhabz");

                    b.Property<bool>("IsDelete");

                    b.Property<int>("JameDore");

                    b.Property<int>("JameHazine");

                    b.Property<int>("JameKol");

                    b.Property<int>("Kasre1000Rial");

                    b.Property<int>("KontoreFeli");

                    b.Property<int>("KontoreGhabli");

                    b.Property<int>("MaliatBarArzesheAfzoode");

                    b.Property<int>("Mantaghe");

                    b.Property<int>("MasrafeEshteraki");

                    b.Property<int>("MasrafeKol");

                    b.Property<int>("MasrafeMotevaset");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<DateTime>("MohlatePardakht");

                    b.Property<string>("NameMoshtarak");

                    b.Property<int>("SerialeKontor");

                    b.Property<string>("Shenasaei");

                    b.Property<decimal>("ShenaseGhabz")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<decimal>("ShenasePardakht")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("ShomareGhabz");

                    b.Property<int>("TakalifeGhanooneBoodje");

                    b.Property<string>("Tarefe");

                    b.Property<DateTime>("TarikheFeli");

                    b.Property<DateTime>("TarikheGhabli");

                    b.Property<DateTime>("TarikheSodoor");

                    b.Property<int>("TedadeDoreBedehi");

                    b.Property<int>("TedadeKhanevar");

                    b.Property<int>("TedadeRoozeDore");

                    b.Property<int>("TedadeVahed");

                    b.Property<string>("VaziateMasraf");

                    b.Property<int>("ZarfiatGharardadi");

                    b.HasKey("Id");

                    b.ToTable("GhabzeAb");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.GhabzeAb.SabegheMianGineMasraf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DarsadeAfzayeshYaKahesh");

                    b.Property<int>("Dore");

                    b.Property<Guid>("GhabzeAbId");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("SaleGhabl");

                    b.Property<string>("SaleJari");

                    b.HasKey("Id");

                    b.HasIndex("GhabzeAbId");

                    b.ToTable("SabegheMianGineMasraf");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.GhabzeBargh.GhabzeBargh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Abonman");

                    b.Property<int>("Amper");

                    b.Property<decimal>("ArghameKontor")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<decimal>("AvarezeBargh");

                    b.Property<int>("BadaneKontor");

                    b.Property<decimal>("BedehiGhabli");

                    b.Property<decimal>("BimeVahedHayeTejari");

                    b.Property<decimal>("CodePosti")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DoreKonooni");

                    b.Property<decimal>("Eshterak")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<decimal>("EzafeHazineMasrafeOjeBar");

                    b.Property<int>("Faz");

                    b.Property<decimal>("HazineOjeBar");

                    b.Property<bool>("IsDelete");

                    b.Property<long>("KamBariGharatPishin");

                    b.Property<long>("KamBariKonooni");

                    b.Property<decimal>("KasreRiali");

                    b.Property<decimal>("MablagheDore");

                    b.Property<decimal>("MablagheGhabelePardakht");

                    b.Property<decimal>("MablagheMasraf");

                    b.Property<decimal>("MablagheMazad600");

                    b.Property<decimal>("Mablaghe_0_100");

                    b.Property<decimal>("Mablaghe_100_200");

                    b.Property<decimal>("Mablaghe_200_300");

                    b.Property<decimal>("Mablaghe_300_400");

                    b.Property<decimal>("Mablaghe_400_500");

                    b.Property<decimal>("Mablaghe_500_600");

                    b.Property<string>("MahalePardakht");

                    b.Property<decimal>("MaliatBarArzesheAfzoode");

                    b.Property<short>("MantagheBargh");

                    b.Property<long>("Masraf");

                    b.Property<decimal>("Masrafe30RoozeMazad600");

                    b.Property<long>("Masrafe30Rooze_0_100");

                    b.Property<decimal>("Masrafe30Rooze_100_200");

                    b.Property<decimal>("Masrafe30Rooze_200_300");

                    b.Property<decimal>("Masrafe30Rooze_300_400");

                    b.Property<decimal>("Masrafe30Rooze_400_500");

                    b.Property<decimal>("Masrafe30Rooze_500_600");

                    b.Property<long>("MasrafeKamBari");

                    b.Property<long>("MasrafeKoleDore");

                    b.Property<long>("MasrafeMianBari");

                    b.Property<long>("MasrafeOjeBari");

                    b.Property<long>("MianBariGharatPishin");

                    b.Property<long>("MianBariKonooni");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<DateTime>("MohlatePardakht");

                    b.Property<DateTime>("MorajeBadi");

                    b.Property<long>("MotevasateMasrafe30Rooze");

                    b.Property<string>("NahveGharateKontor");

                    b.Property<string>("NameMoshtarak");

                    b.Property<decimal>("NerkhMazad600");

                    b.Property<long>("Nerkh_0_100");

                    b.Property<decimal>("Nerkh_100_200");

                    b.Property<decimal>("Nerkh_200_300");

                    b.Property<decimal>("Nerkh_300_400");

                    b.Property<decimal>("Nerkh_400_500");

                    b.Property<decimal>("Nerkh_500_600");

                    b.Property<string>("Neshani");

                    b.Property<string>("NeshaniMarkazeMantaghe");

                    b.Property<string>("NoeFaAliat");

                    b.Property<long>("OjeBariGharatPishin");

                    b.Property<long>("OjeBariKonooni");

                    b.Property<string>("OnvanVaCodeTarefe");

                    b.Property<decimal>("Parvande")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<long>("PasokhGooeiSooratHesab");

                    b.Property<decimal>("PikeFasli");

                    b.Property<int>("SaleGozashte1");

                    b.Property<int>("SaleGozashte2");

                    b.Property<int>("SaleGozashte3");

                    b.Property<int>("SaleGozashte4");

                    b.Property<int>("SaleGozashte5");

                    b.Property<int>("SaleGozashte6");

                    b.Property<int>("SaleJari1");

                    b.Property<int>("SaleJari2");

                    b.Property<int>("SaleJari3");

                    b.Property<int>("SaleJari4");

                    b.Property<int>("SaleJari5");

                    b.Property<int>("SaleJari6");

                    b.Property<string>("Shenasaei");

                    b.Property<decimal>("ShenaseGhabz")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<decimal>("ShenasePardakht")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("ShomareHsab");

                    b.Property<DateTime>("SodooreSooratHesab");

                    b.Property<decimal>("TakhfifeKamBari");

                    b.Property<decimal>("TakhfifeMasrafeKamBari");

                    b.Property<DateTime>("TarikheEnghezayeParvane");

                    b.Property<DateTime>("TarikheGharateKonooni");

                    b.Property<DateTime>("TarikheGharatePishin");

                    b.Property<DateTime>("TarikheNasb");

                    b.Property<long>("TedadeKhanevar");

                    b.Property<long>("TedadeRoozeDore");

                    b.Property<long>("VahedeHavadas");

                    b.Property<string>("VaziatMasraf");

                    b.Property<string>("VaziatPardakht");

                    b.HasKey("Id");

                    b.ToTable("GhabzeBargh");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.Logs.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("KeyValues");

                    b.Property<string>("NewValues");

                    b.Property<string>("OldValues");

                    b.Property<string>("TableName");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.Logs.SystemCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("InputData");

                    b.Property<string>("InputMetaData");

                    b.Property<string>("InputWay");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Output");

                    b.HasKey("Id");

                    b.ToTable("SystemCall");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.Logs.SystemEventLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Data");

                    b.Property<string>("FirstCallerInfo");

                    b.Property<string>("Info");

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("SystemCallId");

                    b.Property<int>("SystemEventLogType");

                    b.HasKey("Id");

                    b.HasIndex("SystemCallId");

                    b.ToTable("SystemEventLog");
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.GhabzeAb.SabegheMianGineMasraf", b =>
                {
                    b.HasOne("GhabzeTo.Domain.Models.GhabzeAb.GhabzeAb", "GhabzeAb")
                        .WithMany("SabegheMianGineMasrafs")
                        .HasForeignKey("GhabzeAbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GhabzeTo.Domain.Models.Logs.SystemEventLog", b =>
                {
                    b.HasOne("GhabzeTo.Domain.Models.Logs.SystemCall", "SystemCall")
                        .WithMany("SystemEventLogs")
                        .HasForeignKey("SystemCallId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
